// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace huawei {
namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_common_2eproto();
void protobuf_AssignDesc_common_2eproto();
void protobuf_ShutdownFile_common_2eproto();

class Journal;
class JournalArray;

enum Journal_JOURNAL_STATUS {
  Journal_JOURNAL_STATUS_CREATED = 0,
  Journal_JOURNAL_STATUS_OPENED = 1,
  Journal_JOURNAL_STATUS_SEALED = 2,
  Journal_JOURNAL_STATUS_Journal_JOURNAL_STATUS_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Journal_JOURNAL_STATUS_Journal_JOURNAL_STATUS_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Journal_JOURNAL_STATUS_IsValid(int value);
const Journal_JOURNAL_STATUS Journal_JOURNAL_STATUS_JOURNAL_STATUS_MIN = Journal_JOURNAL_STATUS_CREATED;
const Journal_JOURNAL_STATUS Journal_JOURNAL_STATUS_JOURNAL_STATUS_MAX = Journal_JOURNAL_STATUS_SEALED;
const int Journal_JOURNAL_STATUS_JOURNAL_STATUS_ARRAYSIZE = Journal_JOURNAL_STATUS_JOURNAL_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* Journal_JOURNAL_STATUS_descriptor();
inline const ::std::string& Journal_JOURNAL_STATUS_Name(Journal_JOURNAL_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    Journal_JOURNAL_STATUS_descriptor(), value);
}
inline bool Journal_JOURNAL_STATUS_Parse(
    const ::std::string& name, Journal_JOURNAL_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Journal_JOURNAL_STATUS>(
    Journal_JOURNAL_STATUS_descriptor(), name, value);
}
enum RESULT {
  OK = 0,
  INTERNAL_ERROR = 1,
  RESULT_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RESULT_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RESULT_IsValid(int value);
const RESULT RESULT_MIN = OK;
const RESULT RESULT_MAX = INTERNAL_ERROR;
const int RESULT_ARRAYSIZE = RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* RESULT_descriptor();
inline const ::std::string& RESULT_Name(RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    RESULT_descriptor(), value);
}
inline bool RESULT_Parse(
    const ::std::string& name, RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RESULT>(
    RESULT_descriptor(), name, value);
}
enum CONSUMER_TYPE {
  REPLAYER = 0,
  REPLICATER = 1,
  CONSUMER_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CONSUMER_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CONSUMER_TYPE_IsValid(int value);
const CONSUMER_TYPE CONSUMER_TYPE_MIN = REPLAYER;
const CONSUMER_TYPE CONSUMER_TYPE_MAX = REPLICATER;
const int CONSUMER_TYPE_ARRAYSIZE = CONSUMER_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* CONSUMER_TYPE_descriptor();
inline const ::std::string& CONSUMER_TYPE_Name(CONSUMER_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CONSUMER_TYPE_descriptor(), value);
}
inline bool CONSUMER_TYPE_Parse(
    const ::std::string& name, CONSUMER_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CONSUMER_TYPE>(
    CONSUMER_TYPE_descriptor(), name, value);
}
// ===================================================================

class Journal : public ::google::protobuf::Message {
 public:
  Journal();
  virtual ~Journal();

  Journal(const Journal& from);

  inline Journal& operator=(const Journal& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Journal& default_instance();

  void Swap(Journal* other);

  // implements Message ----------------------------------------------

  inline Journal* New() const { return New(NULL); }

  Journal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Journal& from);
  void MergeFrom(const Journal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Journal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Journal_JOURNAL_STATUS JOURNAL_STATUS;
  static const JOURNAL_STATUS CREATED =
    Journal_JOURNAL_STATUS_CREATED;
  static const JOURNAL_STATUS OPENED =
    Journal_JOURNAL_STATUS_OPENED;
  static const JOURNAL_STATUS SEALED =
    Journal_JOURNAL_STATUS_SEALED;
  static inline bool JOURNAL_STATUS_IsValid(int value) {
    return Journal_JOURNAL_STATUS_IsValid(value);
  }
  static const JOURNAL_STATUS JOURNAL_STATUS_MIN =
    Journal_JOURNAL_STATUS_JOURNAL_STATUS_MIN;
  static const JOURNAL_STATUS JOURNAL_STATUS_MAX =
    Journal_JOURNAL_STATUS_JOURNAL_STATUS_MAX;
  static const int JOURNAL_STATUS_ARRAYSIZE =
    Journal_JOURNAL_STATUS_JOURNAL_STATUS_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  JOURNAL_STATUS_descriptor() {
    return Journal_JOURNAL_STATUS_descriptor();
  }
  static inline const ::std::string& JOURNAL_STATUS_Name(JOURNAL_STATUS value) {
    return Journal_JOURNAL_STATUS_Name(value);
  }
  static inline bool JOURNAL_STATUS_Parse(const ::std::string& name,
      JOURNAL_STATUS* value) {
    return Journal_JOURNAL_STATUS_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .huawei.proto.Journal.JOURNAL_STATUS status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::huawei::proto::Journal_JOURNAL_STATUS status() const;
  void set_status(::huawei::proto::Journal_JOURNAL_STATUS value);

  // optional uint64 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // optional uint64 pos = 4;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  ::google::protobuf::uint64 pos() const;
  void set_pos(::google::protobuf::uint64 value);

  // optional int32 fid = 5;
  void clear_fid();
  static const int kFidFieldNumber = 5;
  ::google::protobuf::int32 fid() const;
  void set_fid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:huawei.proto.Journal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 size_;
  int status_;
  ::google::protobuf::int32 fid_;
  ::google::protobuf::uint64 pos_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static Journal* default_instance_;
};
// -------------------------------------------------------------------

class JournalArray : public ::google::protobuf::Message {
 public:
  JournalArray();
  virtual ~JournalArray();

  JournalArray(const JournalArray& from);

  inline JournalArray& operator=(const JournalArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JournalArray& default_instance();

  void Swap(JournalArray* other);

  // implements Message ----------------------------------------------

  inline JournalArray* New() const { return New(NULL); }

  JournalArray* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JournalArray& from);
  void MergeFrom(const JournalArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JournalArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // repeated .huawei.proto.Journal journals = 2;
  int journals_size() const;
  void clear_journals();
  static const int kJournalsFieldNumber = 2;
  const ::huawei::proto::Journal& journals(int index) const;
  ::huawei::proto::Journal* mutable_journals(int index);
  ::huawei::proto::Journal* add_journals();
  ::google::protobuf::RepeatedPtrField< ::huawei::proto::Journal >*
      mutable_journals();
  const ::google::protobuf::RepeatedPtrField< ::huawei::proto::Journal >&
      journals() const;

  // @@protoc_insertion_point(class_scope:huawei.proto.JournalArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::huawei::proto::Journal > journals_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static JournalArray* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Journal

// optional string name = 1;
inline void Journal::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Journal::name() const {
  // @@protoc_insertion_point(field_get:huawei.proto.Journal.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Journal::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:huawei.proto.Journal.name)
}
inline void Journal::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:huawei.proto.Journal.name)
}
inline void Journal::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:huawei.proto.Journal.name)
}
inline ::std::string* Journal::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:huawei.proto.Journal.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Journal::release_name() {
  // @@protoc_insertion_point(field_release:huawei.proto.Journal.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Journal::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:huawei.proto.Journal.name)
}

// optional .huawei.proto.Journal.JOURNAL_STATUS status = 2;
inline void Journal::clear_status() {
  status_ = 0;
}
inline ::huawei::proto::Journal_JOURNAL_STATUS Journal::status() const {
  // @@protoc_insertion_point(field_get:huawei.proto.Journal.status)
  return static_cast< ::huawei::proto::Journal_JOURNAL_STATUS >(status_);
}
inline void Journal::set_status(::huawei::proto::Journal_JOURNAL_STATUS value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:huawei.proto.Journal.status)
}

// optional uint64 size = 3;
inline void Journal::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Journal::size() const {
  // @@protoc_insertion_point(field_get:huawei.proto.Journal.size)
  return size_;
}
inline void Journal::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:huawei.proto.Journal.size)
}

// optional uint64 pos = 4;
inline void Journal::clear_pos() {
  pos_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Journal::pos() const {
  // @@protoc_insertion_point(field_get:huawei.proto.Journal.pos)
  return pos_;
}
inline void Journal::set_pos(::google::protobuf::uint64 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:huawei.proto.Journal.pos)
}

// optional int32 fid = 5;
inline void Journal::clear_fid() {
  fid_ = 0;
}
inline ::google::protobuf::int32 Journal::fid() const {
  // @@protoc_insertion_point(field_get:huawei.proto.Journal.fid)
  return fid_;
}
inline void Journal::set_fid(::google::protobuf::int32 value) {
  
  fid_ = value;
  // @@protoc_insertion_point(field_set:huawei.proto.Journal.fid)
}

// -------------------------------------------------------------------

// JournalArray

// optional int32 count = 1;
inline void JournalArray::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 JournalArray::count() const {
  // @@protoc_insertion_point(field_get:huawei.proto.JournalArray.count)
  return count_;
}
inline void JournalArray::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:huawei.proto.JournalArray.count)
}

// repeated .huawei.proto.Journal journals = 2;
inline int JournalArray::journals_size() const {
  return journals_.size();
}
inline void JournalArray::clear_journals() {
  journals_.Clear();
}
inline const ::huawei::proto::Journal& JournalArray::journals(int index) const {
  // @@protoc_insertion_point(field_get:huawei.proto.JournalArray.journals)
  return journals_.Get(index);
}
inline ::huawei::proto::Journal* JournalArray::mutable_journals(int index) {
  // @@protoc_insertion_point(field_mutable:huawei.proto.JournalArray.journals)
  return journals_.Mutable(index);
}
inline ::huawei::proto::Journal* JournalArray::add_journals() {
  // @@protoc_insertion_point(field_add:huawei.proto.JournalArray.journals)
  return journals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::huawei::proto::Journal >*
JournalArray::mutable_journals() {
  // @@protoc_insertion_point(field_mutable_list:huawei.proto.JournalArray.journals)
  return &journals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::huawei::proto::Journal >&
JournalArray::journals() const {
  // @@protoc_insertion_point(field_list:huawei.proto.JournalArray.journals)
  return journals_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace huawei

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::huawei::proto::Journal_JOURNAL_STATUS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::huawei::proto::Journal_JOURNAL_STATUS>() {
  return ::huawei::proto::Journal_JOURNAL_STATUS_descriptor();
}
template <> struct is_proto_enum< ::huawei::proto::RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::huawei::proto::RESULT>() {
  return ::huawei::proto::RESULT_descriptor();
}
template <> struct is_proto_enum< ::huawei::proto::CONSUMER_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::huawei::proto::CONSUMER_TYPE>() {
  return ::huawei::proto::CONSUMER_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
