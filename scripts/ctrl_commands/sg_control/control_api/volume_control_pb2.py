# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: control_api/volume_control.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2
import volume_pb2 as volume__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='control_api/volume_control.proto',
  package='huawei.proto.control',
  syntax='proto3',
  serialized_pb=_b('\n control_api/volume_control.proto\x12\x14huawei.proto.control\x1a\x0c\x63ommon.proto\x1a\x0cvolume.proto\"\x10\n\x0eListDevicesReq\"K\n\x0eListDevicesRes\x12(\n\x06status\x18\x01 \x01(\x0e\x32\x18.huawei.proto.StatusCode\x12\x0f\n\x07\x64\x65vices\x18\x02 \x03(\t\">\n\x0b\x45nableSGReq\x12\x11\n\tvolume_id\x18\x01 \x01(\t\x12\x0c\n\x04size\x18\x02 \x01(\x04\x12\x0e\n\x06\x64\x65vice\x18\x03 \x01(\t\"\xb2\x01\n\x0b\x45nableSGRes\x12(\n\x06status\x18\x01 \x01(\x0e\x32\x18.huawei.proto.StatusCode\x12\x46\n\x0b\x64river_data\x18\x02 \x03(\x0b\x32\x31.huawei.proto.control.EnableSGRes.DriverDataEntry\x1a\x31\n\x0f\x44riverDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"!\n\x0c\x44isableSGReq\x12\x11\n\tvolume_id\x18\x01 \x01(\t\"8\n\x0c\x44isableSGRes\x12(\n\x06status\x18\x01 \x01(\x0e\x32\x18.huawei.proto.StatusCode\"!\n\x0cGetVolumeReq\x12\x11\n\tvolume_id\x18\x01 \x01(\t\"b\n\x0cGetVolumeRes\x12(\n\x06status\x18\x01 \x01(\x0e\x32\x18.huawei.proto.StatusCode\x12(\n\x06volume\x18\x02 \x01(\x0b\x32\x18.huawei.proto.VolumeInfo\"\x10\n\x0eListVolumesReq\"e\n\x0eListVolumesRes\x12(\n\x06status\x18\x01 \x01(\x0e\x32\x18.huawei.proto.StatusCode\x12)\n\x07volumes\x18\x02 \x03(\x0b\x32\x18.huawei.proto.VolumeInfo2\xcb\x03\n\rVolumeControl\x12[\n\x0bListDevices\x12$.huawei.proto.control.ListDevicesReq\x1a$.huawei.proto.control.ListDevicesRes\"\x00\x12R\n\x08\x45nableSG\x12!.huawei.proto.control.EnableSGReq\x1a!.huawei.proto.control.EnableSGRes\"\x00\x12U\n\tDisableSG\x12\".huawei.proto.control.DisableSGReq\x1a\".huawei.proto.control.DisableSGRes\"\x00\x12U\n\tGetVolume\x12\".huawei.proto.control.GetVolumeReq\x1a\".huawei.proto.control.GetVolumeRes\"\x00\x12[\n\x0bListVolumes\x12$.huawei.proto.control.ListVolumesReq\x1a$.huawei.proto.control.ListVolumesRes\"\x00\x62\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,volume__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_LISTDEVICESREQ = _descriptor.Descriptor(
  name='ListDevicesReq',
  full_name='huawei.proto.control.ListDevicesReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=86,
  serialized_end=102,
)


_LISTDEVICESRES = _descriptor.Descriptor(
  name='ListDevicesRes',
  full_name='huawei.proto.control.ListDevicesRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='huawei.proto.control.ListDevicesRes.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='devices', full_name='huawei.proto.control.ListDevicesRes.devices', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=104,
  serialized_end=179,
)


_ENABLESGREQ = _descriptor.Descriptor(
  name='EnableSGReq',
  full_name='huawei.proto.control.EnableSGReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_id', full_name='huawei.proto.control.EnableSGReq.volume_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='huawei.proto.control.EnableSGReq.size', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device', full_name='huawei.proto.control.EnableSGReq.device', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=181,
  serialized_end=243,
)


_ENABLESGRES_DRIVERDATAENTRY = _descriptor.Descriptor(
  name='DriverDataEntry',
  full_name='huawei.proto.control.EnableSGRes.DriverDataEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='huawei.proto.control.EnableSGRes.DriverDataEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='huawei.proto.control.EnableSGRes.DriverDataEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=375,
  serialized_end=424,
)

_ENABLESGRES = _descriptor.Descriptor(
  name='EnableSGRes',
  full_name='huawei.proto.control.EnableSGRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='huawei.proto.control.EnableSGRes.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='driver_data', full_name='huawei.proto.control.EnableSGRes.driver_data', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ENABLESGRES_DRIVERDATAENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=246,
  serialized_end=424,
)


_DISABLESGREQ = _descriptor.Descriptor(
  name='DisableSGReq',
  full_name='huawei.proto.control.DisableSGReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_id', full_name='huawei.proto.control.DisableSGReq.volume_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=426,
  serialized_end=459,
)


_DISABLESGRES = _descriptor.Descriptor(
  name='DisableSGRes',
  full_name='huawei.proto.control.DisableSGRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='huawei.proto.control.DisableSGRes.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=461,
  serialized_end=517,
)


_GETVOLUMEREQ = _descriptor.Descriptor(
  name='GetVolumeReq',
  full_name='huawei.proto.control.GetVolumeReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_id', full_name='huawei.proto.control.GetVolumeReq.volume_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=519,
  serialized_end=552,
)


_GETVOLUMERES = _descriptor.Descriptor(
  name='GetVolumeRes',
  full_name='huawei.proto.control.GetVolumeRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='huawei.proto.control.GetVolumeRes.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume', full_name='huawei.proto.control.GetVolumeRes.volume', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=554,
  serialized_end=652,
)


_LISTVOLUMESREQ = _descriptor.Descriptor(
  name='ListVolumesReq',
  full_name='huawei.proto.control.ListVolumesReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=654,
  serialized_end=670,
)


_LISTVOLUMESRES = _descriptor.Descriptor(
  name='ListVolumesRes',
  full_name='huawei.proto.control.ListVolumesRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='huawei.proto.control.ListVolumesRes.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volumes', full_name='huawei.proto.control.ListVolumesRes.volumes', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=672,
  serialized_end=773,
)

_LISTDEVICESRES.fields_by_name['status'].enum_type = common__pb2._STATUSCODE
_ENABLESGRES_DRIVERDATAENTRY.containing_type = _ENABLESGRES
_ENABLESGRES.fields_by_name['status'].enum_type = common__pb2._STATUSCODE
_ENABLESGRES.fields_by_name['driver_data'].message_type = _ENABLESGRES_DRIVERDATAENTRY
_DISABLESGRES.fields_by_name['status'].enum_type = common__pb2._STATUSCODE
_GETVOLUMERES.fields_by_name['status'].enum_type = common__pb2._STATUSCODE
_GETVOLUMERES.fields_by_name['volume'].message_type = volume__pb2._VOLUMEINFO
_LISTVOLUMESRES.fields_by_name['status'].enum_type = common__pb2._STATUSCODE
_LISTVOLUMESRES.fields_by_name['volumes'].message_type = volume__pb2._VOLUMEINFO
DESCRIPTOR.message_types_by_name['ListDevicesReq'] = _LISTDEVICESREQ
DESCRIPTOR.message_types_by_name['ListDevicesRes'] = _LISTDEVICESRES
DESCRIPTOR.message_types_by_name['EnableSGReq'] = _ENABLESGREQ
DESCRIPTOR.message_types_by_name['EnableSGRes'] = _ENABLESGRES
DESCRIPTOR.message_types_by_name['DisableSGReq'] = _DISABLESGREQ
DESCRIPTOR.message_types_by_name['DisableSGRes'] = _DISABLESGRES
DESCRIPTOR.message_types_by_name['GetVolumeReq'] = _GETVOLUMEREQ
DESCRIPTOR.message_types_by_name['GetVolumeRes'] = _GETVOLUMERES
DESCRIPTOR.message_types_by_name['ListVolumesReq'] = _LISTVOLUMESREQ
DESCRIPTOR.message_types_by_name['ListVolumesRes'] = _LISTVOLUMESRES

ListDevicesReq = _reflection.GeneratedProtocolMessageType('ListDevicesReq', (_message.Message,), dict(
  DESCRIPTOR = _LISTDEVICESREQ,
  __module__ = 'control_api.volume_control_pb2'
  # @@protoc_insertion_point(class_scope:huawei.proto.control.ListDevicesReq)
  ))
_sym_db.RegisterMessage(ListDevicesReq)

ListDevicesRes = _reflection.GeneratedProtocolMessageType('ListDevicesRes', (_message.Message,), dict(
  DESCRIPTOR = _LISTDEVICESRES,
  __module__ = 'control_api.volume_control_pb2'
  # @@protoc_insertion_point(class_scope:huawei.proto.control.ListDevicesRes)
  ))
_sym_db.RegisterMessage(ListDevicesRes)

EnableSGReq = _reflection.GeneratedProtocolMessageType('EnableSGReq', (_message.Message,), dict(
  DESCRIPTOR = _ENABLESGREQ,
  __module__ = 'control_api.volume_control_pb2'
  # @@protoc_insertion_point(class_scope:huawei.proto.control.EnableSGReq)
  ))
_sym_db.RegisterMessage(EnableSGReq)

EnableSGRes = _reflection.GeneratedProtocolMessageType('EnableSGRes', (_message.Message,), dict(

  DriverDataEntry = _reflection.GeneratedProtocolMessageType('DriverDataEntry', (_message.Message,), dict(
    DESCRIPTOR = _ENABLESGRES_DRIVERDATAENTRY,
    __module__ = 'control_api.volume_control_pb2'
    # @@protoc_insertion_point(class_scope:huawei.proto.control.EnableSGRes.DriverDataEntry)
    ))
  ,
  DESCRIPTOR = _ENABLESGRES,
  __module__ = 'control_api.volume_control_pb2'
  # @@protoc_insertion_point(class_scope:huawei.proto.control.EnableSGRes)
  ))
_sym_db.RegisterMessage(EnableSGRes)
_sym_db.RegisterMessage(EnableSGRes.DriverDataEntry)

DisableSGReq = _reflection.GeneratedProtocolMessageType('DisableSGReq', (_message.Message,), dict(
  DESCRIPTOR = _DISABLESGREQ,
  __module__ = 'control_api.volume_control_pb2'
  # @@protoc_insertion_point(class_scope:huawei.proto.control.DisableSGReq)
  ))
_sym_db.RegisterMessage(DisableSGReq)

DisableSGRes = _reflection.GeneratedProtocolMessageType('DisableSGRes', (_message.Message,), dict(
  DESCRIPTOR = _DISABLESGRES,
  __module__ = 'control_api.volume_control_pb2'
  # @@protoc_insertion_point(class_scope:huawei.proto.control.DisableSGRes)
  ))
_sym_db.RegisterMessage(DisableSGRes)

GetVolumeReq = _reflection.GeneratedProtocolMessageType('GetVolumeReq', (_message.Message,), dict(
  DESCRIPTOR = _GETVOLUMEREQ,
  __module__ = 'control_api.volume_control_pb2'
  # @@protoc_insertion_point(class_scope:huawei.proto.control.GetVolumeReq)
  ))
_sym_db.RegisterMessage(GetVolumeReq)

GetVolumeRes = _reflection.GeneratedProtocolMessageType('GetVolumeRes', (_message.Message,), dict(
  DESCRIPTOR = _GETVOLUMERES,
  __module__ = 'control_api.volume_control_pb2'
  # @@protoc_insertion_point(class_scope:huawei.proto.control.GetVolumeRes)
  ))
_sym_db.RegisterMessage(GetVolumeRes)

ListVolumesReq = _reflection.GeneratedProtocolMessageType('ListVolumesReq', (_message.Message,), dict(
  DESCRIPTOR = _LISTVOLUMESREQ,
  __module__ = 'control_api.volume_control_pb2'
  # @@protoc_insertion_point(class_scope:huawei.proto.control.ListVolumesReq)
  ))
_sym_db.RegisterMessage(ListVolumesReq)

ListVolumesRes = _reflection.GeneratedProtocolMessageType('ListVolumesRes', (_message.Message,), dict(
  DESCRIPTOR = _LISTVOLUMESRES,
  __module__ = 'control_api.volume_control_pb2'
  # @@protoc_insertion_point(class_scope:huawei.proto.control.ListVolumesRes)
  ))
_sym_db.RegisterMessage(ListVolumesRes)


_ENABLESGRES_DRIVERDATAENTRY.has_options = True
_ENABLESGRES_DRIVERDATAENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class VolumeControlStub(object):
    """northern oriented rpc service interface
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.ListDevices = channel.unary_unary(
          '/huawei.proto.control.VolumeControl/ListDevices',
          request_serializer=ListDevicesReq.SerializeToString,
          response_deserializer=ListDevicesRes.FromString,
          )
      self.EnableSG = channel.unary_unary(
          '/huawei.proto.control.VolumeControl/EnableSG',
          request_serializer=EnableSGReq.SerializeToString,
          response_deserializer=EnableSGRes.FromString,
          )
      self.DisableSG = channel.unary_unary(
          '/huawei.proto.control.VolumeControl/DisableSG',
          request_serializer=DisableSGReq.SerializeToString,
          response_deserializer=DisableSGRes.FromString,
          )
      self.GetVolume = channel.unary_unary(
          '/huawei.proto.control.VolumeControl/GetVolume',
          request_serializer=GetVolumeReq.SerializeToString,
          response_deserializer=GetVolumeRes.FromString,
          )
      self.ListVolumes = channel.unary_unary(
          '/huawei.proto.control.VolumeControl/ListVolumes',
          request_serializer=ListVolumesReq.SerializeToString,
          response_deserializer=ListVolumesRes.FromString,
          )


  class VolumeControlServicer(object):
    """northern oriented rpc service interface
    """

    def ListDevices(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def EnableSG(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DisableSG(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetVolume(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListVolumes(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_VolumeControlServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'ListDevices': grpc.unary_unary_rpc_method_handler(
            servicer.ListDevices,
            request_deserializer=ListDevicesReq.FromString,
            response_serializer=ListDevicesRes.SerializeToString,
        ),
        'EnableSG': grpc.unary_unary_rpc_method_handler(
            servicer.EnableSG,
            request_deserializer=EnableSGReq.FromString,
            response_serializer=EnableSGRes.SerializeToString,
        ),
        'DisableSG': grpc.unary_unary_rpc_method_handler(
            servicer.DisableSG,
            request_deserializer=DisableSGReq.FromString,
            response_serializer=DisableSGRes.SerializeToString,
        ),
        'GetVolume': grpc.unary_unary_rpc_method_handler(
            servicer.GetVolume,
            request_deserializer=GetVolumeReq.FromString,
            response_serializer=GetVolumeRes.SerializeToString,
        ),
        'ListVolumes': grpc.unary_unary_rpc_method_handler(
            servicer.ListVolumes,
            request_deserializer=ListVolumesReq.FromString,
            response_serializer=ListVolumesRes.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'huawei.proto.control.VolumeControl', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaVolumeControlServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """northern oriented rpc service interface
    """
    def ListDevices(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def EnableSG(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DisableSG(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetVolume(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListVolumes(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaVolumeControlStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """northern oriented rpc service interface
    """
    def ListDevices(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    ListDevices.future = None
    def EnableSG(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    EnableSG.future = None
    def DisableSG(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DisableSG.future = None
    def GetVolume(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetVolume.future = None
    def ListVolumes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    ListVolumes.future = None


  def beta_create_VolumeControl_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('huawei.proto.control.VolumeControl', 'DisableSG'): DisableSGReq.FromString,
      ('huawei.proto.control.VolumeControl', 'EnableSG'): EnableSGReq.FromString,
      ('huawei.proto.control.VolumeControl', 'GetVolume'): GetVolumeReq.FromString,
      ('huawei.proto.control.VolumeControl', 'ListDevices'): ListDevicesReq.FromString,
      ('huawei.proto.control.VolumeControl', 'ListVolumes'): ListVolumesReq.FromString,
    }
    response_serializers = {
      ('huawei.proto.control.VolumeControl', 'DisableSG'): DisableSGRes.SerializeToString,
      ('huawei.proto.control.VolumeControl', 'EnableSG'): EnableSGRes.SerializeToString,
      ('huawei.proto.control.VolumeControl', 'GetVolume'): GetVolumeRes.SerializeToString,
      ('huawei.proto.control.VolumeControl', 'ListDevices'): ListDevicesRes.SerializeToString,
      ('huawei.proto.control.VolumeControl', 'ListVolumes'): ListVolumesRes.SerializeToString,
    }
    method_implementations = {
      ('huawei.proto.control.VolumeControl', 'DisableSG'): face_utilities.unary_unary_inline(servicer.DisableSG),
      ('huawei.proto.control.VolumeControl', 'EnableSG'): face_utilities.unary_unary_inline(servicer.EnableSG),
      ('huawei.proto.control.VolumeControl', 'GetVolume'): face_utilities.unary_unary_inline(servicer.GetVolume),
      ('huawei.proto.control.VolumeControl', 'ListDevices'): face_utilities.unary_unary_inline(servicer.ListDevices),
      ('huawei.proto.control.VolumeControl', 'ListVolumes'): face_utilities.unary_unary_inline(servicer.ListVolumes),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_VolumeControl_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('huawei.proto.control.VolumeControl', 'DisableSG'): DisableSGReq.SerializeToString,
      ('huawei.proto.control.VolumeControl', 'EnableSG'): EnableSGReq.SerializeToString,
      ('huawei.proto.control.VolumeControl', 'GetVolume'): GetVolumeReq.SerializeToString,
      ('huawei.proto.control.VolumeControl', 'ListDevices'): ListDevicesReq.SerializeToString,
      ('huawei.proto.control.VolumeControl', 'ListVolumes'): ListVolumesReq.SerializeToString,
    }
    response_deserializers = {
      ('huawei.proto.control.VolumeControl', 'DisableSG'): DisableSGRes.FromString,
      ('huawei.proto.control.VolumeControl', 'EnableSG'): EnableSGRes.FromString,
      ('huawei.proto.control.VolumeControl', 'GetVolume'): GetVolumeRes.FromString,
      ('huawei.proto.control.VolumeControl', 'ListDevices'): ListDevicesRes.FromString,
      ('huawei.proto.control.VolumeControl', 'ListVolumes'): ListVolumesRes.FromString,
    }
    cardinalities = {
      'DisableSG': cardinality.Cardinality.UNARY_UNARY,
      'EnableSG': cardinality.Cardinality.UNARY_UNARY,
      'GetVolume': cardinality.Cardinality.UNARY_UNARY,
      'ListDevices': cardinality.Cardinality.UNARY_UNARY,
      'ListVolumes': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'huawei.proto.control.VolumeControl', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
