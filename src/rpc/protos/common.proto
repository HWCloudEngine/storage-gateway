syntax = "proto3";
option objc_class_prefix = "DRS";
package huawei.proto;

enum RESULT {
    DRS_UNKNOWN = 0;
    DRS_OK = 1;
    INTERNAL_ERROR = 2;
    NO_SUCH_KEY = 3;
}

//all status code
enum StatusCode {
    sOk = 0;
    sSnapAlreadyExist = 100;
    sSnapNotExist = 101;
    sSnapPersitError = 102;
    sSnapTransactionError = 103;
    sSnapUpdateError = 104;
    sSnapMetaPersistError = 105;
}

//snapshot use scenario
enum SnapScene {
    /*common snapshot*/
    FOR_NORMAL = 0;
    /*interal snapshot for replication disable and enable*/
    FOR_REPLICATION = 1;
    /*interal snapshot for backup*/
    FOR_BACKUP = 2;
}

//snapshot requst header
message SnapReqHead {
    /*sequence id*/
    int64  seq_id = 1;
    /*use scene*/
    SnapScene scene = 2;
    /*remote or local*/
    int32  snap_type = 3;
    /*cacsing volume replication pair uuid*/
    string replication_uuid = 4;
    /*cacsing volume replication checkpoint uuid*/
    string checkpoint_uuid = 5;
}

message SnapAckHead {
    /*sequence id*/
    int64 seq_id = 1;
    /*status code*/
    StatusCode status = 2;
}

//snapshot status
enum SnapStatus{
    SNAP_CREATING  = 0;
    SNAP_CREATED   = 1;
    SNAP_DELETING  = 2;
    SNAP_DELETED   = 3; 
    SNAP_ROLLBACKING = 4;
    SNAP_ROLLBACKED  = 5;
    SNAP_INVALID = 10;
}

// define replication roles
enum REP_ROLE{
    REP_UNKNOWN = 0;
    REP_PRIMARY = 1;
    REP_SECONDARY = 2;
}

// define replication status
enum REP_STATUS{
    REP_UNKNOW = 0;
    REP_CREATING = 1;
    REP_ENABLING = 3;
    REP_ENABLED = 4;
    REP_DISABLING = 5;
    REP_DISABLED = 6;
    REP_FAILING_OVER = 7;
    REP_FAILED_OVER = 8;
    REP_REVERSING = 9;
    REP_DELETING = 11;
    REP_DELETED = 12;
    REP_ERROR = 20;
}
