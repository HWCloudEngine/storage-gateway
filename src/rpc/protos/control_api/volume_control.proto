syntax = "proto3";
import "common.proto";
import "volume.proto";
package huawei.proto.control;

/*northern oriented rpc service interface*/
service VolumeControl {
    rpc ListDevices(ListDevicesReq) returns (ListDevicesRes) {}
    rpc EnableSG(EnableSGReq) returns (EnableSGRes) {}
    rpc DisableSG(DisableSGReq) returns (DisableSGRes) {}
    rpc GetVolume(GetVolumeReq) returns (GetVolumeRes) {}
    rpc ListVolumes(ListVolumesReq) returns (ListVolumesRes) {}
    rpc InitializeConnection(InitializeConnectionReq) returns (InitializeConnectionRes) {}
    rpc TerminateConnection(TerminateConnectionReq) returns (TerminateConnectionRes) {}
    rpc AttachVolume(AttachVolumeReq) returns (AttachVolumeRes) {}
    rpc DetachVolume(DetachVolumeReq) returns (DetachVolumeRes) {}
}

message ListDevicesReq {
}

message ListDevicesRes {
    StatusCode status = 1;
    repeated string devices = 2;
}

message EnableSGReq {
    string volume_id = 1;
    uint64 size = 2;
    string device = 3;
    string attached_host = 4;
}

message EnableSGRes {
    StatusCode status = 1;
}

message DisableSGReq {
    string volume_id = 1;
}

message DisableSGRes {
    StatusCode status = 1;
}

message GetVolumeReq {
    string volume_id = 1;
}

message GetVolumeRes {
    StatusCode status = 1;
    VolumeInfo volume = 2;
}

message ListVolumesReq {
}

message ListVolumesRes {
    StatusCode status = 1;
    repeated VolumeInfo volumes = 2;
}

message InitializeConnectionReq {
    string volume_id = 1;
    ClientMode mode = 2;
}

message InitializeConnectionRes {
    StatusCode status = 1;
    map<string, string> connection_info = 2;
}

message TerminateConnectionReq {
    string volume_id = 1;
    ClientMode mode = 2;
    string device = 3;
    string attached_host = 4;
}

message TerminateConnectionRes {
    StatusCode status = 1;
}

message AttachVolumeReq {
    string volume_id = 1;
    string device = 2;
    string attached_host = 3;
}

message AttachVolumeRes {
    StatusCode status = 1;
}

message DetachVolumeReq {
    string volume_id = 1;
}

message DetachVolumeRes {
    StatusCode status = 1;
}
