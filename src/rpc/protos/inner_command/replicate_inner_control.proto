// storage gateway inner control commands of rpc request/response
// sg client send the control commands to sg server
syntax = "proto3";
import "journal/journal.proto";
import "common.proto";
package huawei.proto.inner;

/*northern oriented rpc service interface*/
service ReplicateInnerControl {
    /*replicate control operations*/
    rpc CreateReplication(CreateReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
    rpc EnableReplication(EnableReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
    rpc DisableReplication(DisableReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
    rpc FailoverReplication(FailoverReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
    rpc ReverseReplication(ReverseReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
    rpc DeleteReplication(DeleteReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
    // report a replication checkpoint
    rpc ReportCheckpoint(ReportCheckpointReq) returns(ReportCheckpointRes) {}
}

message CreateReplicationInnerReq{
    string operate_id = 1;
    string rep_uuid = 2; // replciation unique id
    string local_volume = 3;
    repeated string peer_volumes = 4;
    RepRole role = 5;
    JournalMarker marker = 6; //optional,position of control snapshot entry in journal
}
message EnableReplicationInnerReq{
    string operate_id = 1; // require, unique operation uuid,used both for snap uuid?
    string vol_id = 2; // retrieve the replication via volume id
    RepRole role = 3;
    JournalMarker marker = 4; //position of control snapshot entry in journal
}
message DisableReplicationInnerReq{
    string operate_id = 1; // require, operation uuid,used both for snap uuid?
    string vol_id = 2;
    RepRole role = 3;
    JournalMarker marker = 4; //position of control snapshot entry in journal
}
message FailoverReplicationInnerReq{
    string operate_id = 1; // require, operation uuid,used both for snap uuid?
    string vol_id = 2; // retrieve the replication via uuid
    RepRole role = 3;
    JournalMarker marker = 4; //required for primary,ending position of replication
}
message ReverseReplicationInnerReq{
    string operate_id = 1; // require, unique uuid
    string vol_id = 2; // retrieve the replication via uuid
    RepRole role = 3;
    JournalMarker marker = 4; //position of control request entry in journal
}
message DeleteReplicationInnerReq{
    string operate_id = 1; // require, unique uuid
    string vol_id = 2; // retrieve the replication via uuid
    RepRole role = 3;
}
message ReplicationInnerCommonRes{
    StatusCode status = 1;
}
message ReportCheckpointReq{
    string operate_id = 1;
    string vol_id = 2;
    RepRole role = 3;
}
message ReportCheckpointRes{
    StatusCode status = 1;
    bool discard_snap = 2;
}