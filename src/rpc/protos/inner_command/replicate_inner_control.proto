// storage gateway inner control commands of rpc request/response
// sg client send the control commands to sg server
syntax = "proto3";
import "journal/journal.proto";
import "common.proto";
package huawei.proto.inner;

/*northern oriented rpc service interface*/
service ReplicateInnerControl {
    /*replicate control operations*/
    rpc CreateReplication(CreateReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
    rpc EnableReplication(EnableReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
    rpc DisableReplication(DisableReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
    rpc FailoverReplication(FailoverReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
    rpc ReverseReplication(ReverseReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
    rpc QueryReplication(QueryReplicationInnerReq) returns(QueryReplicationInnerRes) {}
    rpc ListReplication(ListReplicationInnerReq) returns(ListReplicationInnerRes) {}
    rpc DeleteReplication(DeleteReplicationInnerReq) returns(ReplicationInnerCommonRes) {}
}

message CreateReplicationInnerReq{
    string operate_id = 1;
    string uuid = 2; // replciation unique id
    string primary_volume = 3;
    string secondary_volume = 4;
    REP_ROLE role = 5;
}
message EnableReplicationInnerReq{
    string operate_id = 1; // requere, unique uuid
    string uuid = 2; // retrieve the replication via uuid
    REP_ROLE role = 3;
    JournalMarker marker = 4; //position of control request entry in journal
}
message DisableReplicationInnerReq{
    string operate_id = 1; // requere, unique uuid
    string uuid = 2; // retrieve the replication via uuid
    REP_ROLE role = 3;
    JournalMarker marker = 4; //position of control request entry in journal
}
message FailoverReplicationInnerReq{
    string operate_id = 1; // requere, unique uuid
    string uuid = 2; // retrieve the replication via uuid
    REP_ROLE role = 3;
}
message ReverseReplicationInnerReq{
    string operate_id = 1; // requere, unique uuid
    string uuid = 2; // retrieve the replication via uuid
    REP_ROLE role = 3;
    JournalMarker marker = 4; //position of control request entry in journal
}
message QueryReplicationInnerReq{
    string operate_id = 1; // requere, unique uuid
    string uuid = 2; // retrieve the replication via uuidl
}
message DeleteReplicationInnerReq{
    string operate_id = 1; // requere, unique uuid
    string uuid = 2; // retrieve the replication via uuid
    REP_ROLE role = 3;
}
message ReplicationInnerCommonRes{
    int32 ret = 1;
    string operate_id = 2;
}

message ReplicationInnerElement{
    string uuid = 1;
    string primary_volume = 2;
    string secondary_volume = 3;
    REP_STATUS status = 4;
}
message QueryReplicationInnerRes{
    int32 ret = 1;
    string operate_id = 2;
    ReplicationInnerElement element = 3;
}
message ListReplicationInnerReq{
    string operate_id = 1;
}
message ListReplicationInnerRes{
    int32 ret = 1;
    string operate_id = 2;
    repeated ReplicationInnerElement tuple = 3;
}
