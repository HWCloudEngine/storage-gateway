syntax = "proto3";
package huawei.proto.transfer;
import "common.proto";
import "journal/journal.proto";

service DataTransfer {
    rpc transfer(stream TransferRequest) returns(stream TransferResponse) {}
}

enum MessageType {
    UNKNOWN_TYPE = 0;
    // replicate messages(1--6):
    REPLICATE_START = 1;
    REPLICATE_DATA = 2;
    REPLICATE_END = 3;
    REPLICATE_MARKER = 4;

    // backup messages(7--*):
}

enum EncodeType {
    UNKNOWN_EN = 0;
    NONE_EN = 1;
}

message TransferRequest {
    // common header
    uint64 id = 1;
    EncodeType encode = 2;
    MessageType type = 3;

    // data :serailized message
    bytes data = 4;
}

message TransferResponse {
    uint64 id = 1;
    EncodeType encode = 2;
    MessageType type = 3;
    StatusCode status = 4;

    bytes data = 5;
}

message ReplicateDataReq{
    string vol_id = 1;
    uint64 journal_counter = 2;
    // sub counter mainly used when syncing snapshot, otherwise set to 0
    uint64 sub_counter = 3;
    uint64 offset = 4;
    bytes data = 5;
}

message ReplicateMarkerReq{
    string vol_id = 1;
    JournalMarker marker = 2;
}

message ReplicateStartReq{
    string vol_id = 1;
    uint64 journal_counter = 2;
    // sub counter mainly used when syncing snapshot, otherwise set to 0
    uint64 sub_counter = 3;
}

message ReplicateEndReq{
    string vol_id = 1;
    uint64 journal_counter = 2;
    // sub counter mainly used when syncing snapshot, otherwise set to 0
    uint64 sub_counter = 3;
    bool is_open = 4;
}

